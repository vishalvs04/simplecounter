{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\react apps\\\\simplecounter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [temperature, settemperature] = useState(0);\n  const [temperaturecolor, settemperaturecolor] = useState('cold');\n\n  const increment = () => {\n    const newtemp = temperature + 1;\n\n    if (newtemp >= 15) {\n      settemperaturecolor('hot');\n    } else if (newtemp < 15 && newtemp >= 10) {\n      settemperaturecolor('neutral');\n    } else if (newtemp < 10) {\n      settemperaturecolor('cold');\n    }\n\n    settemperature(newtemp);\n  };\n\n  const decrement = () => {\n    const newtemp = temperature - 1;\n\n    if (newtemp >= 15) {\n      settemperaturecolor();\n    }\n\n    settemperature(temperature - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature-display-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `temperature-display ${temperaturecolor}`,\n          id: \"app\",\n          children: [temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"increment\",\n          onClick: increment,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"decrement\",\n          onClick: decrement,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"3KuXjP9YaldOvxpAoNuq7L46TK4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","temperature","settemperature","temperaturecolor","settemperaturecolor","increment","newtemp","decrement"],"sources":["D:/javascript/react apps/simplecounter/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [temperature,settemperature] = useState(0)\n  const [temperaturecolor,settemperaturecolor] = useState('cold')\n  const increment = ()=>{\n    const newtemp=temperature+1\n    if (newtemp>=15){\n      settemperaturecolor('hot')\n    }else if(newtemp<15 && newtemp>=10){\n      settemperaturecolor('neutral')\n    }else if(newtemp<10){\n      settemperaturecolor('cold')\n\n    }\n    settemperature(newtemp)\n\n  }\n  const decrement = ()=>{\n    const newtemp=temperature-1\n    if (newtemp>=15){\n      settemperaturecolor()\n    }\n    settemperature(temperature-1)\n    \n  }\n  \n  return (\n  <>\n  \n    <div className=\"app-container\" >\n    <div className=\"temperature-display-container\">\n          <div className={`temperature-display ${temperaturecolor}`} id=\"app\">\n            {temperature}Â°C\n\n      </div>\n    </div>\n    <div className=\"button-container\">\n    <button id=\"increment\" onClick={increment}>+</button>\n    <button id=\"decrement\" onClick={decrement}>-</button>\n\n    </div>\n\n    </div>\n  \n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BH,QAAQ,CAAC,CAAD,CAA7C;EACA,MAAM,CAACI,gBAAD,EAAkBC,mBAAlB,IAAyCL,QAAQ,CAAC,MAAD,CAAvD;;EACA,MAAMM,SAAS,GAAG,MAAI;IACpB,MAAMC,OAAO,GAACL,WAAW,GAAC,CAA1B;;IACA,IAAIK,OAAO,IAAE,EAAb,EAAgB;MACdF,mBAAmB,CAAC,KAAD,CAAnB;IACD,CAFD,MAEM,IAAGE,OAAO,GAAC,EAAR,IAAcA,OAAO,IAAE,EAA1B,EAA6B;MACjCF,mBAAmB,CAAC,SAAD,CAAnB;IACD,CAFK,MAEA,IAAGE,OAAO,GAAC,EAAX,EAAc;MAClBF,mBAAmB,CAAC,MAAD,CAAnB;IAED;;IACDF,cAAc,CAACI,OAAD,CAAd;EAED,CAZD;;EAaA,MAAMC,SAAS,GAAG,MAAI;IACpB,MAAMD,OAAO,GAACL,WAAW,GAAC,CAA1B;;IACA,IAAIK,OAAO,IAAE,EAAb,EAAgB;MACdF,mBAAmB;IACpB;;IACDF,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd;EAED,CAPD;;EASA,oBACA;IAAA,uBAEE;MAAK,SAAS,EAAC,eAAf;MAAA,wBACA;QAAK,SAAS,EAAC,+BAAf;QAAA,uBACM;UAAK,SAAS,EAAG,uBAAsBE,gBAAiB,EAAxD;UAA2D,EAAE,EAAC,KAA9D;UAAA,WACGF,WADH;QAAA;UAAA;UAAA;UAAA;QAAA;MADN;QAAA;QAAA;QAAA;MAAA,QADA,eAOA;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACA;UAAQ,EAAE,EAAC,WAAX;UAAuB,OAAO,EAAEI,SAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAQ,EAAE,EAAC,WAAX;UAAuB,OAAO,EAAEE,SAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPA;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF,iBADA;AAoBD;;GA7CQP,G;;KAAAA,G;AA+CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}